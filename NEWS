Version 1.3.2
-------------------------------------------------------------------------

BUG FIXES
* Fixed a critical bug impacting URLs with colons in the path

Version 1.3.1
-------------------------------------------------------------------------

CHANGES
* suffix_refresh has been removed, since LazyData's parameters prevented it from functioning; thanks to
  Alex Pinto for the initial bug report and Hadley Wickham for confirming the possible solutions.

BUG FIXES
* the parser was not properly handling ports; thanks to a report from Rich FitzJohn, this is now fixed.

Version 1.3.0
-------------------------------------------------------------------------

NEW FEATURES
* param_set() for inserting or modifying key/value pairs in URL query strings.
* param_remove() added for stripping key/value pairs out of URL query strings.

CHANGES
* url_parameters has been renamed param_get() under the new naming scheme - url_parameters still exists, however,
for the purpose of backwards-compatibiltiy.

BUG FIXES
* Fixed a bug reported by Alex Pinto whereby URLs with parameters but no paths would not have their domain
  correctly parsed.

Version 1.2.1
-------------------------------------------------------------------------

CHANGES
* Changed "tld" column to "suffix" in return of "suffix_extract" to more
accurately reflect what it is
* Switched to "vapply" in "suffix_extract" to give a bit of a speedup to
an already fast function

BUG FIXES
* Fixed documentation of "suffix_extract"

DEVELOPMENT
* More internal documentation added to compiled code.

Version 1.2.0
-------------------------------------------------------------------------
NEW FEATURES
* Jay Jacobs' "tldextract" functionality has been merged with urltools, and can be accessed
with "suffix_extract"
* At Nicolas Coutin's suggestion, url_compose - url_parse in reverse - has been introduced.

BUG FIXES

* To adhere to RfC standards, "query" functions have been renamed "parameter"
* A bug in which fragments could not be retrieved (and were incorrectly identified as parameters)
has been fixed. Thanks to Nicolas Coutin for reporting it and providing a reproducible example.

Version 1.1.1
-------------------------------------------------------------------------
BUG FIXES

* Parameter parsing now fixed to require a = after the parameter name, thus solving for scenarios where
the URL would contain the parameter name as part of, say, the domain, and it'd grab the wrong thing. Thanks
to Jacob Barnett for the bug report and example.
* URL encoding no longer encodes the slash between the domain and path (thanks to Peter Meissner for pointing
this bug out).

DEVELOPMENT
*More unit tests

Version 1.1.0
-------------------------------------------------------------------------
NEW FEATURES
*url_parameters provides the values of specified parameters within a vector of URLs, as a data.frame
*KeyboardInterrupts are now available for interrupting long computations.
*url_parse now provides a data.frame, rather than a list, as output.

BUG FIXES

DEVELOPMENT
*De-static the hell out of all the C++.
*Internal refactor to store each logical stage of url decomposition as its own method
*Internal refactor to use references, minimising memory usage; thanks to Mark Greenaway for making this work!
*Roxygen upgrade

Version 1.0.0
-------------------------------------------------------------------------
NEW FEATURES
*New get/set functionality, mimicking lubridate; see the package vignette.

DEVELOPMENT
*Internal C++ documentation added and the encoders and parsers refactored.

Version 0.6.0
-------------------------------------------------------------------------
NEW FEATURES
*replace_parameter introduced, to augment extract_parameter (previously simply url_param). This
allows you to take the value a parameter has associated with it, and replace it with one of your choosing.
*extract_host allows you to grab the hostname of a site, ignoring other components.

BUG FIXES
*extract_parameter (now url_extract_param) previously failed with an obfuscated error if the requested
parameter terminated the URL. This has now been fixed.

DEVELOPMENT
*unit tests expanded
*Internal tweaks to improve the speed of url_decode and url_encode.